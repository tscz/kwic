{"version":3,"sources":["kwic.ts","App.tsx","reportWebVitals.js","index.tsx"],"names":["computeKwicFor","input","lines","split","output","forEach","line","word","push","App","useState","setInput","Container","Row","className","Col","Form","Control","as","style","resize","height","onChange","event","target","value","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAAO,SAASA,EAAeC,GAC7B,IAAMC,EAAQD,EAAME,MAAM,SAEtBC,EAAmB,GAQvB,OANAF,EAAMG,SAAQ,SAACC,GACCA,EAAKH,MAAM,KAEnBE,SAAQ,SAACE,GAAD,OAAUH,EAAOI,KAAKD,SAG/BH,E,WCsBMK,MA3Bf,WAAgB,IAAD,EACaC,mBAAS,sBADtB,mBACNT,EADM,KACCU,EADD,KAGb,OACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,UAAU,yBAAf,iCACA,eAACD,EAAA,EAAD,WACE,cAACE,EAAA,EAAD,UACE,cAACC,EAAA,EAAKC,QAAN,CACEC,GAAG,WACHC,MAAO,CAAEC,OAAQ,OAAQC,OAAQ,QACjCC,SAAU,SAACC,GAAD,OAAWZ,EAASY,EAAMC,OAAOC,YAG/C,cAACV,EAAA,EAAD,UACGf,EAAeC,GAAOyB,KAAI,SAACpB,GAAD,OACzB,gCACGA,EACD,sCCZCqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3d67b7d5.chunk.js","sourcesContent":["export function computeKwicFor(input: string): string[] {\n  const lines = input.split(/\\r?\\n/);\n\n  var output: string[] = [];\n\n  lines.forEach((line) => {\n    const words = line.split(\" \");\n\n    words.forEach((word) => output.push(word));\n  });\n\n  return output;\n}\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport { useState } from \"react\";\nimport { Col, Container, Form, Row } from \"react-bootstrap\";\nimport \"./App.css\";\nimport { computeKwicFor } from \"./kwic\";\n\nfunction App() {\n  const [input, setInput] = useState(\"Please enter text!\");\n\n  return (\n    <Container>\n      <Row className=\"justify-content-center\">Please enter a text</Row>\n      <Row>\n        <Col>\n          <Form.Control\n            as=\"textarea\"\n            style={{ resize: \"none\", height: \"95vh\" }}\n            onChange={(event) => setInput(event.target.value)}\n          />\n        </Col>\n        <Col>\n          {computeKwicFor(input).map((line) => (\n            <div>\n              {line}\n              <br />\n            </div>\n          ))}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}